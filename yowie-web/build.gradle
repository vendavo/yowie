import groovy.json.JsonOutput

plugins {
    id "com.moowork.grunt" version "0.10"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.moowork.grunt'

node {
    version = '0.12.1'
    download = true
}

sourceSets {
    main {
        resources {
            srcDir "${projectDir}/app"
        }
    }
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:$groovy.version"
}

project.tasks.npmInstall.outputs.upToDateWhen { 
    
    def bowerComponents = file('app/bower_components')
    
    if (!bowerComponents.exists()) {
        return false
    }
    
    def bower = file('bower.json')
     
    return bowerComponents.lastModified() >= bower.lastModified()
}

task generateYowieFile << {

    Properties gradleProperties = new Properties()
    gradleProperties.load(new FileInputStream(new File(project.rootDir, 'gradle.properties')))

    def json = JsonOutput.toJson([
            'yowie': ['version': gradleProperties.getProperty('version')]
    ])
    
    File yowie = new File("${projectDir}/app", 'yowie.json')
    
    if (yowie.exists()) {
        yowie.delete()
    }
    
    yowie << json
}

project.tasks.generateYowieFile.dependsOn(project.tasks.npmInstall)

project.tasks.build.dependsOn(project.tasks.generateYowieFile)
